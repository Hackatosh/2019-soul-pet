version: "3.3"
services:
  back:
    container_name: "soul-pet-prod-back"
    build:
      context: ./back
      dockerfile: Dockerfile-Prod
    networks:
      - inner
    restart: always
    links:
      - db
    depends_on:
      - db
    ports:
      - "3001:3000"
    environment:
      SERVER_PORT: 3000
      CORS_HOST : http://localhost
      TOKEN_LIFETIME_SEC: 600
      DB_HOST: soul-pet-db
      DB_PORT: 3306
      DB_USER: 'user'
      DB_PASSWORD: 'password'
      DB_NAME: 'soul_pet'
      SECRET_KEY: '7CMl4AhyElECTWaUqRjxbl7FsmtYunqf'
      FTP_HOST: soul-pet-sftp
      FTP_PORT: 22
      FTP_USER: nodejs
      FTP_PASSWORD: password
      FTP_PATH_ANIMAL_PICTURES: pictures/animals
      FTP_PATH_EVENT_PICTURES: pictures/events
      PLACES_API_ID: "OMUJAQFCEKPCCDPHKQW21VUWVJ1YEBGHN0R0RQRQZWJRRNL3"
      PLACES_API_SECRET: "XQ1BKCP2ARAXAQ4M3AQ0P51CJ5DOVLLVYYINOJWXBXQYEVTZ"
    volumes:
      - ./back:/usr/app/
      - /usr/app/node_modules
  front:
    container_name: "soul-pet-prod-front"
    build:
      context: ./front
      dockerfile: Dockerfile-Prod
    networks:
      - inner
    restart: always
    environment:
      PORT: 3000
      REACT_APP_BACK_URL: "http://localhost:3001/api"
    ports:
      - "80:3000"
    volumes:
      - ./front:/usr/app/
      - /usr/app/node_modules
  db:
    image: mariadb:10.4
    container_name: "soul-pet-prod-db"
    networks:
      - inner
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: strongpassword
      MYSQL_DATABASE: soul_pet
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db-data:/var/lib/mariadb/data
  sftp:
    image: atmoz/sftp
    container_name: 'soul-pet-prod-sftp'
    volumes:
      - ./ftp/sftp.d:/etc/sftp.d/
      - sftp-data:/home/nodejs/pictures/
    networks:
      - inner
    command: nodejs:password:::pictures
volumes:
  db-data:
  sftp-data:
networks:
  inner: